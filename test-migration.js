// Test Database Schema Migration
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á API ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

const UserService = require('./services/UserService');
const ChatService = require('./services/ChatService');
const DiaryService = require('./services/DiaryService');

async function testDatabaseMigration() {
    console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á API ‡∏´‡∏•‡∏±‡∏á Database Migration...\n');

    try {
        // Test 1: User Service
        console.log('1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UserService...');
        const userService = new UserService();
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        const testUserData = {
            email: `test${Date.now()}@example.com`,
            username: `testuser${Date.now()}`,
            password: 'password123',
            first_name: 'Test',
            last_name: 'User',
            display_name: 'Test User'
        };

        const createUserResult = await userService.createUser(testUserData);
        if (createUserResult.success) {
            console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ID:', createUserResult.data.id);
            console.log('‚úÖ User Preferences ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß');
            
            // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login
            const loginResult = await userService.loginUser(testUserData.username, testUserData.password);
            if (loginResult.success) {
                console.log('‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                
                // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö activity log
                await userService.logActivity(
                    createUserResult.data.id, 
                    'test_action', 
                    'user', 
                    createUserResult.data.id, 
                    { test: true }
                );
                console.log('‚úÖ Activity Log ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            } else {
                console.log('‚ùå Login ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', loginResult.error);
            }
        } else {
            console.log('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', createUserResult.error);
        }

        // Test 2: Chat Service  
        console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ChatService...');
        const chatService = new ChatService();
        
        if (createUserResult.success) {
            const testMessageData = {
                sender_id: createUserResult.data.id,
                receiver_id: createUserResult.data.id, // ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
                message: 'Hello, this is a test message!',
                message_type: 'text'
            };

            const sendMessageResult = await chatService.sendMessage(testMessageData);
            if (sendMessageResult.success) {
                console.log('‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ID:', sendMessageResult.data.id);
                
                // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö add reaction
                const reactionResult = await chatService.addReaction(
                    sendMessageResult.data.id, 
                    createUserResult.data.id, 
                    '‚ù§Ô∏è'
                );
                if (reactionResult.success) {
                    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Reaction ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                } else {
                    console.log('‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏° Reaction ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', reactionResult.error);
                }
            } else {
                console.log('‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', sendMessageResult.error);
            }
        }

        // Test 3: Diary Service
        console.log('\n3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö DiaryService...');
        const diaryService = new DiaryService();
        
        if (createUserResult.success) {
            const testDiaryData = {
                user_id: createUserResult.data.id,
                title: 'Test Diary Entry',
                content: 'This is a test diary entry for migration testing.',
                mood: 'happy',
                category: 'daily',
                visibility: 'shared',
                tags: ['test', 'migration']
            };

            const createDiaryResult = await diaryService.createDiary(testDiaryData);
            if (createDiaryResult.success) {
                console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Diary Entry ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ID:', createDiaryResult.data.id);
            } else {
                console.log('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á Diary Entry ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', createDiaryResult.error);
            }
        }

        console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥');

    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error.message);
        console.error('Stack trace:', error.stack);
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô
if (require.main === module) {
    testDatabaseMigration();
}

module.exports = { testDatabaseMigration };
